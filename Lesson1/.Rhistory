install.packages(c("backports", "BH", "broom", "callr", "cli", "clipr", "colorspace", "curl", "DBI", "dbplyr", "devtools", "digest", "dplyr", "evaluate", "fansi", "fivethirtyeight", "forcats", "formatR", "fs", "ggplot2", "gh", "git2r", "gtable", "haven", "hexbin", "highr", "hms", "htmltools", "httpuv", "httr", "installr", "knitr", "later", "lazyeval", "markdown", "mgcv", "mime", "modelr", "nycflights13", "openssl", "pillar", "pkgbuild", "pkgconfig", "plyr", "prettyunits", "processx", "progress", "promises", "psych", "purrr", "R6", "rcmdcheck", "Rcpp", "readxl", "remotes", "reprex", "rmarkdown", "rstudioapi", "rvest", "scales", "selectr", "shiny", "skimr", "stringi", "stringr", "testthat", "tibble", "tidyr", "tidyverse", "tinytex", "usethis", "whisker", "workflowr", "xfun", "xml2", "xtable"))
spotify_songs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-21/spotify_songs.csv')
library(tidyverse)
lizzo <- spotify_songs %>% filter(track_artist == "Lizzo")
view(lizzo)
ggplot(spotify_songs, aes(playlist_genre, track_popularity)) +
geom_boxplot()
View(spotify_songs)
spotify_songs %>% filter(playlist_genre == 'edm',track_popularity ==100)
spotify_songs %>% filter(playlist_genre == 'edm',track_popularity >50)
spotify_songs %>% filter(playlist_genre == 'edm',track_popularity >90)
new_york <- read_csv("new-york-city.csv")
#use lubridate to work with dates in the dataset
chi_bikes <- chi_bikes %>% mutate(date = ymd_hms(`Start Time`))
setwd("C:/Users/mutiu/Desktop/project/rPractice/rUdacity/bikeanalysis")
library(tidyverse)
library(lubridate)
#orginal dataset
chicago <- read_csv("chicago.csv")
new_york <- read_csv("new-york-city.csv")
washington <- read_csv("washington.csv")
#create a new dataset that I can mutate
chi_bikes <- rename(chicago,ID = X1)
#use lubridate to work with dates in the dataset
chi_bikes <- chi_bikes %>% mutate(date = ymd_hms(`Start Time`))
chi_bikes %>%
group_by(month(date))
#frequency table
chi_bikes %>% group_by(month(date)) %>% summarise(freq = n())
month(chi_bikes$date) %>% table()
#create labels for the frequency table
month(chi_bikes$date, label=TRUE) %>% table()
#create a variable called month and lable the months
chi_bikes$month <- month(chi_bikes$date,label=TRUE)
#create a bar graph with the plot
ggplot(chi_bikes,aes(month)) + geom_bar()
#do the same thing for weekday
chi_bikes$wday <- wday(chi_bikes$date, label = TRUE)
ggplot(chi_bikes,aes(wday)) + geom_bar()
#use lubridate to work with dates in the dataset
chi_bikes <- chi_bikes %>% mutate(date = ymd_hms(`Start Time`))
chi_bikes %>%
group_by(month(date))
#frequency table
chi_bikes %>% group_by(month(date)) %>% summarise(freq = n())
month(chi_bikes$date) %>% table()
#create labels for the frequency table
month(chi_bikes$date, label=TRUE) %>% table()
#create a variable called month and lable the months
chi_bikes$month <- month(chi_bikes$date,label=TRUE)
#create a bar graph with the plot
ggplot(chi_bikes,aes(month)) + geom_bar()
#do the same thing for weekday
chi_bikes$wday <- wday(chi_bikes$date, label = TRUE) +xlab("weekday")
ggplot(chi_bikes,aes(wday)) + geom_bar()
#use lubridate to work with dates in the dataset
chi_bikes <- chi_bikes %>% mutate(date = ymd_hms(`Start Time`))
chi_bikes %>%
group_by(month(date))
#frequency table
chi_bikes %>% group_by(month(date)) %>% summarise(freq = n())
month(chi_bikes$date) %>% table()
#create labels for the frequency table
month(chi_bikes$date, label=TRUE) %>% table()
#create a variable called month and lable the months
chi_bikes$month <- month(chi_bikes$date,label=TRUE)
#create a bar graph with the plot
ggplot(chi_bikes,aes(month)) + geom_bar()
#do the same thing for weekday
chi_bikes$wday <- wday(chi_bikes$date, label = TRUE)
ggplot(chi_bikes,aes(wday)) + geom_bar()
ggplot(chi_bikes,aes(wday)) + geom_bar() + xlab("weekday")
ggplot(chi_bikes,aes(wday)) + geom_bar() + xlab("weekday") + title ("Chicago weekday rides")
ggplot(chi_bikes,aes(wday)) + geom_bar() + xlab("weekday") + title ("Chicago weekday rides")
ggplot(chi_bikes,aes(wday)) + geom_bar() + xlab("weekday") + title("Chicago weekday rides")
ggplot(chi_bikes,aes(wday)) + geom_bar() + xlab("weekday")
ggplot(chi_bikes,aes(wday)) + geom_bar() +  ggtitle("Plot of length \n by dose") + xlab("weekday")
ggplot(chi_bikes,aes(wday)) + geom_bar() +  ggtitle("Chicago Weekday Rideship counts") + xlab("weekday")
View(new_york)
View(washington)
setwd("C:/Users/mutiu/Desktop/project/rPractice/rUdacity/bikeanalysis")
library(tidyverse)
library(lubridate)
#orginal dataset
chicago <- read_csv("chicago.csv")
new_york <- read_csv("new-york-city.csv")
washington <- read_csv("washington.csv")
#create a new dataset that I can mutate
chi_bikes <- rename(chicago,ID = X1)
nyc_bikes <- rename(new_york,ID = X1)
wash_bikes <- rename(washington,ID = X1)
#use lubridate to work with dates in the dataset
chi_bikes <- chi_bikes %>% mutate(date = ymd_hms(`Start Time`))
chi_bikes %>%
group_by(month(date))
#frequency table
chi_bikes %>% group_by(month(date)) %>% summarise(freq = n())
month(chi_bikes$date) %>% table()
#create labels for the frequency table
month(chi_bikes$date, label=TRUE) %>% table()
#create a variable called month and lable the months
chi_bikes$month <- month(chi_bikes$date,label=TRUE)
#create a bar graph with the plot
ggplot(chi_bikes,aes(month)) + geom_bar()
#do the same thing for weekday
chi_bikes$wday <- wday(chi_bikes$date, label = TRUE)
ggplot(chi_bikes,aes(wday)) + geom_bar() +  ggtitle("Chicago Weekday Rideship counts") + xlab("weekday")
nyc_bikes <- nyc_bikes %>% mutate(date = ymd_hms(`Start Time`))
nyc_bikes %>%
group_by(month(date))
#create labels for the frequency table
month(nyc_bikes$date, label=TRUE) %>% table()
#create a variable called month and lable the months
nyc_bikes$month <- month(nyc_bikes$date,label=TRUE)
#create a bar graph with the plot
ggplot(nyc_bikes,aes(month)) + geom_bar()
#do the same thing for weekday
nyc_bikes$wday <- wday(nyc_bikes$date, label = TRUE)
ggplot(nyc_bikes,aes(wday)) + geom_bar() +  ggtitle("New York Weekday Rideship counts") + xlab("weekday")
wash_bikes <- wash_bikes %>% mutate(date = ymd_hms(`Start Time`))
wash_bikes %>%
group_by(month(date))
#frequency table
month(wash_bikes$date, label=TRUE) %>% table()
#create a variable called month and lable the months
wash_bikes$month <- month(wash_bikes$date,label=TRUE)
#create a bar graph with the plot
ggplot(wash_bikes,aes(month)) + geom_bar()
#do the same thing for weekday
wash_bikes$wday <- wday(wash_bikes$date, label = TRUE)
ggplot(wash_bikes,aes(wday)) + geom_bar() +  ggtitle("Washington Weekday Rideship counts") + xlab("weekday")
#2a
chi_bikes %>% count(`Start Station`,sort=TRUE)
#2b
chi_bikes %>% count(`End Station`, sort= TRUE)
#2c
#What is the most common trip from start to end (i.e., most frequent combination of start station and end station)?
chi_bikes %>% group_by(`Start Station`, `End Station`) %>% count(sort=TRUE)
#2a
wash_bikes %>% count(`Start Station`,sort=TRUE)
#2b
wash_bikes %>% count(`End Station`, sort= TRUE)
#2c
#What is the most common trip from start to end (i.e., most frequent combination of start station and end station)?
wash_bikes %>% group_by(`Start Station`, `End Station`) %>% count(sort=TRUE)
#2a
nyc_bikes %>% count(`Start Station`,sort=TRUE)
#2b
nyc_bikes %>% count(`End Station`, sort= TRUE)
#2c
#What is the most common trip from start to end (i.e., most frequent combination of start station and end station)?
nyc_bikes %>% group_by(`Start Station`, `End Station`) %>% count(sort=TRUE)
chi_bikes %>%summarise(sum(`Trip Duration`)/3600)
chi_bikes %>%summarise(mean(`Trip Duration`)/60)
#What are the counts of each user type?
chi_bikes %>% count(`User Type`,sort=TRUE)
#What are the counts of each gender (only available for NYC and Chicago)?
chi_bikes %>% count(`Gender`, sort = TRUE)
#What are the earliest, most recent, most common year of birth (only available for NYC and Chicago)?
chi_bikes %>% na.omit %>% summarise(min(`Birth Year`))
chi_bikes %>% na.omit %>% summarise(max(`Birth Year`))
chi_bikes %>% group_by(`Birth Year`) %>% count(sort=TRUE)
#1989 is the most common year
#What are the counts of each user type?
nyc_bikes %>% count(`User Type`,sort=TRUE)
#What are the counts of each gender (only available for NYC and Chicago)?
nyc_bikes %>% count(`Gender`, sort = TRUE)
#What are the earliest, most recent, most common year of birth (only available for NYC and Chicago)?
nyc_bikes %>% na.omit %>% summarise(min(`Birth Year`))
nyc_bikes %>% na.omit %>% summarise(max(`Birth Year`))
nyc_bikes %>% group_by(`Birth Year`) %>% count(sort=TRUE)
#What are the counts of each user type?
wash_bikes %>% count(`User Type`,sort=TRUE)
#What are the counts of each gender (only available for NYC and Chicago)?
wash_bikes %>% count(`Gender`, sort = TRUE)
wash_bikes %>% group_by(`Start Station`, `End Station`) %>% count(sort=TRUE)
#What are the counts of each user type?
wash_bikes %>% count(`User Type`,sort=TRUE)
chi_bikes$hour <- wday(chi_bikes$hour, label = TRUE)
chi_bikes$hour <- hour(chi_bikes$date, label = TRUE)
install.package("pagedown")
install.packages("pagedown")
knitr::opts_chunk$set(echo = TRUE)
chi_duration <- ggplot(aes(x=trip_duration/60),data=chi_bikes) + geom_histogram() +  scale_x_continuous(limits=c(1,25)) + xlab("Trip Duration Minutes") + ggtitle("Chicago Bike Trips in Minutes")
install.packages("kableExtra")
devtools::install_github("haozhu233/kableExtra")
getwd()
install.packages(c("AsioHeaders", "backports", "bookdown", "broom", "callr", "chron", "classInt", "cli", "covr", "crosstalk", "dbplyr", "devtools", "diffobj", "digest", "dplyr", "DT", "ellipsis", "forcats", "fs", "gdtools", "gganimate", "ggplot2", "git2r", "glue", "haven", "htmltools", "httpuv", "httr", "isoband", "jsonlite", "kableExtra", "knitr", "later", "lifecycle", "lubridate", "maptools", "mime", "mnormt", "modelr", "openssl", "pagedown", "pillar", "pkgbuild", "pkgload", "plyr", "processx", "promises", "ps", "psych", "purrr", "Rcpp", "remotes", "reshape2", "rex", "rgdal", "rlang", "rmarkdown", "roxygen2", "rstudioapi", "rversions", "rvest", "scales", "servr", "shiny", "sp", "stringi", "sys", "systemfonts", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "units", "usethis", "uuid", "vctrs", "vdiffr", "websocket", "withr", "xfun", "xml2", "xmlparsedata", "yaml"))
R.version.string
library(installr)
library(stringr)
library(stringr)
library(installr)
updateR()
updateR()
table(mvt$Month)
source('C:/Users/mutiu/Desktop/project/rPractice/MIT_Analytics/Lesson1/chicagoCrime.R')
table(mvt$Month)
source('C:/Users/mutiu/Desktop/project/rPractice/MIT_Analytics/Lesson1/chicagoCrime.R')
setwd('C:\Users\mutiu\Desktop\project\rPractice\MIT_Analytics\Lesson1')
setwd("~/")
setwd("C:/Users/mutiu/Desktop/project/rPractice/MIT_Analytics/Lesson1")
source('C:/Users/mutiu/Desktop/project/rPractice/MIT_Analytics/Lesson1/chicagoCrime.R')
mvt
ncol(mvt)
summary(mvt)
table(mvt$Month)
mvt %>% group_by(Month)
mvt %>% group_by(Month) %>% slice.min(order_by=Month)
mvt %>% group_by(Month) %>%  mutate(prop = prop.table(n))
table(mvt$Month)
mvt %>%
group_by(Month) %>%
count(Arrest)
table(mvt$Month)
mvt %>%
filter(Arrest ==TRUE)
group_by(Month) %>%
count(Arrest)
mvt %>%
filter(Arrest ==TRUE)%>%
group_by(Month) %>%
count(Arrest)
table(mvt$Month)
mvt %>%
filter(Arrest ==TRUE)%>%
group_by(Month) %>%
count(Arrest) %>%
slice(which.min(n))
mvt %>%
filter(Arrest ==TRUE)%>%
group_by(Month) %>%
count(Arrest) %>%
desc(n)
mvt %>%
filter(Arrest ==TRUE)%>%
group_by(Month) %>%
count(Arrest) %>%
summarise(n = n())
mvt %>%
filter(Arrest ==TRUE)%>%
group_by(Month) %>%
count(Arrest) %>%
summarise(min(n))
mvt %>%
filter(Arrest ==TRUE)%>%
group_by(Month) %>%
count(Arrest) %>%
filter(n == min(n))
mvt %>%
filter(Arrest ==TRUE)%>%
group_by(Month) %>%
count(Arrest)
table(mvt$Month)
table(mvt$Weekday)
mvt %>%
filter(Arrest == TRUE)%>%
group_by(Month)
mvt %>%
filter(Arrest ==TRUE)%>%
group_by(Month) %>%
count(Arrest)
mvt %>%
group_by(Month)%>%
tally(Arrest)
table(mvt$Month)
mvt %>%
filter(Arrest ==TRUE)%>%
group_by(Month) %>%
count(Arrest)
table(mvt$Arrest,mvt$Month)
table(mvt$Month)
mvt %>%
group_by(Month)%>%
tally(Arrest)
mvt %>%
group_by(Month)
mvt %>%
group_by(Month,Arrest)
mvt %>%
group_by(Month)%>%
sum(Arrest)
mvt %>%
group_by(Month)%>%
count(Arrest)
mvt %>%
group_by(Month)%>%
count(Arrest)%>%
summarize(true_count = sum(value))
mvt %>%
group_by(Month)%>%
count(Arrest)%>%
summarize(true_count = sum(n))
table(mvt$Month)
table(mvt$Arrest == TRUE, mvt$Month)
table(mvt$Arrest == TRUE, mvt$Month)
table(mvt$Arrest == TRUE, mvt$Month)
table(mvt$Arrest == TRUE, mvt$Month)
table(mvt$Month ==TRUE)
sort(table(mvt$LocationDescription))
sort(table(mvt$LocationDescription),decreasing = TRUE)
mvt %>% desc(LocationDescription)
mvt %>% arrange(desc(LocationDescription))
mvt %>% group_by(LocationDescription) %>% count(Arrest) %>% arrange(desc(LocationDescription))
mvt %>% group_by(LocationDescription) %>% count(Arrest) %>%   summarize(sum(n)) %>%
arrange(desc(LocationDescription))
mvt %>% group_by(LocationDescription) %>% count(Arrest) %>%   summarize(sum(n)) %>%
arrange(desc(n))
mvt %>% group_by(LocationDescription) %>% count(Arrest) %>%   summarize(sum(n))
mvt %>% group_by(LocationDescription) %>% count(Arrest) %>%   summarize(sum(n)) %>% top_n(n)
mvt %>% group_by(LocationDescription) %>% count(Arrest) %>%   summarize(sum(n)) %>% top_n(5)
mvt %>% group_by(LocationDescription) %>% count(Arrest) %>%   summarize(sum(n)) %>% top_n(8)
mvt %>% group_by(LocationDescription) %>% count(Arrest) %>%   summarize(sum(n)) %>% arrange(desc(n))
mvt %>% group_by(LocationDescription) %>% count(Arrest) %>%   summarize(sum(n)) %>% arrange(desc(sum(n))
mvt %>% group_by(LocationDescription) %>% count(Arrest) %>%   summarize(sum(n))
mvt %>% group_by(LocationDescription) %>% count(Arrest) %>%   summarize(true_count = sum(n))
mvt %>% group_by(LocationDescription) %>% count(Arrest) %>%   summarize(true_count = sum(n)) %>% top_n(true_count)
mvt %>% group_by(LocationDescription) %>% count(Arrest) %>%   summarize(true_count = sum(n)) %>% ungroup() %>% top_n(true_count)
mvt %>% group_by(LocationDescription) %>% count(Arrest) %>%   summarize(true_count = sum(n)) )
mvt %>% group_by(LocationDescription) %>% count(Arrest) %>%   summarize(true_count = sum(n))
mvt %>% group_by(LocationDescription) %>% count(Arrest) %>%   summarize(true_count = sum(n))%>% arrange(desc(true_count))
prop.table(mvt$Arrest, mvt$Year)
table(mvt$Arrest, mvt$Year)
prop.table(table(mvt$Arrest, mvt$Year))
table(mvt$Arrest, mvt$Year)
table(mvt$Arrest == TRUE, mvt$Year)
library(ggplot2)
ggplot(mvt$Date, aes(x=value)) +
geom_histogram()
ggplot(mvt, aes(x=Date)) +
geom_histogram()
ggplot(mvt, aes(x=Date)) +
geom_histogram(binwidth=30)
ggplot(mvt, aes(x=Date)) +
geom_histogram(binwidth=100)
